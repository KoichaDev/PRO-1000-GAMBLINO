@use "sass:string";

$base-size: 1em;

$sizes: (
	'size-0': $base-size * 0,
	'size-1': $base-size * 0.125,
	'size-2': $base-size * 0.25,
	'size-3': $base-size * 0.5,
	'size-4': $base-size * 0.625,
	'size-5': $base-size * 0.75,
	'size-6': $base-size * 0.875,
	'size-7': $base-size * 1,
	'size-8': $base-size * 1.125,
	'size-9': $base-size * 1.25,
	'size-10': $base-size * 1.5,
	'size-11': $base-size * 1.75,
	'size-12': $base-size * 2,
	'size-13': $base-size * 2.25,
	'size-14': $base-size * 2.5,
	'size-15': $base-size * 2.75,
	'size-16': $base-size * 3,
);

$sides: left, top, bottom, right;

@each $size-number, $size-value in $sizes {
	$number: string.slice($size-number, 6);
	// Utility class for padding
	.p {
		&-#{$number} {
			margin: $size-value;
		}

		&x-#{$number} {
			margin-left: $size-value;
			margin-right: $size-value;
		}

		&y-#{$number} {
			margin-top: $size-value;
			margin-bottom: $size-value;
		}

		&l-#{$number} {
			margin-left: $size-value;
		}

		&t-#{$number} {
			margin-top: $size-value;
		}

		&r-#{$number} {
			margin-right: $size-value;
		}

		&b-#{$number} {
			margin-bottom: $size-value;
		}

		// @each $side in $sides {
		// 	&#{$side}-#{$number} {
		// 		margin-#{$side}: $size-value;
		// 	}
		// }
	}
	// Utility class for margin
	.m {
		&-auto {
			margin: auto;
		}

		&x-auto {
			margin: 0 auto;
		}

		&y-auto {
			margin: auto 0;
		}

		&-#{$number} {
			margin: $size-value;
		}

		&x-#{$number} {
			margin-left: $size-value;
			margin-right: $size-value;
		}

		&y-#{$number} {
			margin-top: $size-value;
			margin-bottom: $size-value;
		}

		&l-#{$number} {
			margin-left: $size-value;
		}

		&t-#{$number} {
			margin-top: $size-value;
		}

		&r-#{$number} {
			margin-right: $size-value;
		}

		&b-#{$number} {
			margin-bottom: $size-value;
		}

		// @each $side in $sides {
		// 	&#{$side}-#{$number} {
		// 		margin-#{$side}: $size-value;
		// 	}
		// }
	}
}
